import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { ExternalLink, Info } from "lucide-react";

interface Vulnerability {
  id: string;
  cveId: string;
  dependency: string;
  currentVersion: string;
  patchVersion: string;
  severity: 'critical' | 'high' | 'medium' | 'low';
  cvssScore: number;
  description: string;
  impact: string;
}

const mockVulnerabilities: Vulnerability[] = [
  {
    id: '1',
    cveId: 'CVE-2023-24998',
    dependency: 'commons-fileupload',
    currentVersion: '1.4.0',
    patchVersion: '1.5.0',
    severity: 'critical',
    cvssScore: 9.8,
    description: 'Apache Commons FileUpload Remote Code Execution',
    impact: 'Allows attackers to execute arbitrary code'
  },
  {
    id: '2',
    cveId: 'CVE-2023-35116',
    dependency: 'jackson-databind',
    currentVersion: '2.14.1',
    patchVersion: '2.15.2',
    severity: 'high',
    cvssScore: 8.1,
    description: 'Jackson Databind Deserialization Vulnerability',
    impact: 'May lead to denial of service attacks'
  },
  {
    id: '3',
    cveId: 'CVE-2023-33201',
    dependency: 'spring-web',
    currentVersion: '5.3.21',
    patchVersion: '5.3.23',
    severity: 'high',
    cvssScore: 7.5,
    description: 'Spring Framework Path Traversal',
    impact: 'Unauthorized file access possible'
  },
  {
    id: '4',
    cveId: 'CVE-2023-20863',
    dependency: 'spring-boot-starter',
    currentVersion: '2.6.7',
    patchVersion: '2.7.2',
    severity: 'medium',
    cvssScore: 5.3,
    description: 'Spring Boot Actuator Information Disclosure',
    impact: 'Sensitive information exposure'
  },
  {
    id: '5',
    cveId: 'CVE-2023-42503',
    dependency: 'apache-commons-lang3',
    currentVersion: '3.12.0',
    patchVersion: '3.13.0',
    severity: 'low',
    cvssScore: 3.7,
    description: 'Apache Commons Lang NumberUtils DoS',
    impact: 'Minor denial of service risk'
  }
];

export const VulnerabilityTable = () => {
  const getSeverityColor = (severity: string) => {
    switch (severity.toLowerCase()) {
      case 'critical': return 'bg-critical text-critical-foreground';
      case 'high': return 'bg-high text-high-foreground';
      case 'medium': return 'bg-medium text-medium-foreground';
      case 'low': return 'bg-low text-low-foreground';
      default: return 'bg-muted text-muted-foreground';
    }
  };

  const getCvssColor = (score: number) => {
    if (score >= 9.0) return 'text-critical font-bold';
    if (score >= 7.0) return 'text-high font-semibold';
    if (score >= 4.0) return 'text-medium font-medium';
    return 'text-low';
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle>Detected Vulnerabilities</CardTitle>
        <CardDescription>
          Detailed analysis of security vulnerabilities found in your project dependencies
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="rounded-md border">
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>CVE ID</TableHead>
                <TableHead>Dependency</TableHead>
                <TableHead>Current Version</TableHead>
                <TableHead>Patch Version</TableHead>
                <TableHead>Severity</TableHead>
                <TableHead>CVSS Score</TableHead>
                <TableHead>Actions</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {mockVulnerabilities.map((vuln) => (
                <TableRow key={vuln.id} className="group">
                  <TableCell>
                    <div className="space-y-1">
                      <code className="text-sm font-mono bg-muted px-2 py-1 rounded">
                        {vuln.cveId}
                      </code>
                      <p className="text-xs text-muted-foreground line-clamp-2">
                        {vuln.description}
                      </p>
                    </div>
                  </TableCell>
                  <TableCell>
                    <div className="space-y-1">
                      <p className="font-medium">{vuln.dependency}</p>
                      <p className="text-xs text-muted-foreground">
                        {vuln.impact}
                      </p>
                    </div>
                  </TableCell>
                  <TableCell>
                    <Badge variant="outline" className="font-mono">
                      {vuln.currentVersion}
                    </Badge>
                  </TableCell>
                  <TableCell>
                    <Badge variant="default" className="font-mono bg-low text-low-foreground">
                      {vuln.patchVersion}
                    </Badge>
                  </TableCell>
                  <TableCell>
                    <Badge className={getSeverityColor(vuln.severity)}>
                      {vuln.severity.toUpperCase()}
                    </Badge>
                  </TableCell>
                  <TableCell>
                    <span className={getCvssColor(vuln.cvssScore)}>
                      {vuln.cvssScore}
                    </span>
                  </TableCell>
                  <TableCell>
                    <div className="flex gap-2">
                      <Button
                        variant="outline"
                        size="sm"
                        className="gap-1"
                        onClick={() => window.open(`https://nvd.nist.gov/vuln/detail/${vuln.cveId}`, '_blank')}
                      >
                        <ExternalLink className="h-3 w-3" />
                        NVD
                      </Button>
                      <Button
                        variant="ghost"
                        size="sm"
                        className="gap-1"
                      >
                        <Info className="h-3 w-3" />
                        Details
                      </Button>
                    </div>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>
      </CardContent>
    </Card>
  );
};